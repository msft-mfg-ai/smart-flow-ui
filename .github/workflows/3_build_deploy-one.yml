# ------------------------------------------------------------------------------------------------------------------------
# Action: Build and deploy one container app modules
# ------------------------------------------------------------------------------------------------------------------------
name: 3 - Build and Deploy One Container App

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - app/**
  workflow_dispatch:
    inputs:
      deployEnvironment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod
      deployApp:
        description: 'App to Build/Deploy'
        required: true
        default: 'api'
        type: choice
        options:
          - api
          - batch
      runSecurityScan:
        description: 'Run Security Scan'
        required: false
        default: false
        type: boolean
      # runSmokeTest:
      #   description: 'Run Smoke Tests'
      #   required: false
      #   default: false
      #   type: boolean

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

# ------------------------------------------------------------------------------------------------------------------------
env:
  # these are defined by the project itself, so they can stay here...
  ACR_REPO_NAME: 'aiflows'

  API_APP_PATH: 'app/Assistant.Hub.Api'
  API_ACR_APP_NAME: 'assistantapi'
  API_PORT: '80'

  BATCH_APP_PATH: 'app/Assistant.Hub.Api.Batch'
  BATCH_ACR_APP_NAME: 'assistantbatch'
  BATCH_PORT: '4001'
  # activation is getting an error: The TargetPort 80 does not match the listening port 39581. The TargetPort 80 does not match any of the listening ports: [39581 4001 4001].

# ------------------------------------------------------------------------------------------------------------------------
jobs:
  template-env:
    # You can't pass environment variables to templates, so put them in outputs here that you CAN pass
    name: Template Env Variables
    runs-on: ubuntu-latest
    outputs:
      PROJECT_ROOT: ${{ github.workspace }}
      ENV_CODE: ${{ inputs.deployEnvironment }}
      APP_NAME: ${{ vars.APP_NAME }}
      APP_NAME_NO_DASHES: ${{ vars.APP_NAME_NO_DASHES }}
      RESOURCE_GROUP_NAME: '${{ vars.RESOURCEGROUP_PREFIX }}-${{ inputs.deployEnvironment }}'

      ACR_NAME: '${{ vars.APP_NAME_NO_DASHES }}cr${{ inputs.deployEnvironment }}'
      ACR_REPO_NAME: ${{ env.ACR_REPO_NAME }}
      
      CONTAINER_APP_ENV_NAME: '${{ vars.APP_NAME_NO_DASHES }}-cae-${{ inputs.deployEnvironment }}'

      API_CONTAINER_APP_NAME: '${{ vars.APP_NAME_NO_DASHES }}-ca-api-${{ inputs.deployEnvironment }}'
      API_APP_PATH: ${{ env.API_APP_PATH }}
      API_ACR_APP_NAME: ${{ env.API_ACR_APP_NAME }}
      API_PORT: ${{ env.API_PORT }}

      BATCH_CONTAINER_APP_NAME: '${{ vars.APP_NAME_NO_DASHES }}-ca-batch-${{ inputs.deployEnvironment }}'
      BATCH_APP_PATH: ${{ env.BATCH_APP_PATH }}
      BATCH_ACR_APP_NAME: ${{ env.BATCH_ACR_APP_NAME }}
      BATCH_PORT: ${{ env.BATCH_PORT }}

    steps:
      - name: Set common environment variables
        id: set-env
        run: |
          echo "PROJECT_ROOT: ${{ github.workspace }}"
          echo "inputs.ENV_CODE: ${{ inputs.deployEnvironment }}"
          echo "vars.APP_NAME: ${{ vars.APP_NAME }}"
          echo "vars.APP_NAME_NO_DASHES: ${{ vars.APP_NAME_NO_DASHES }}"
          echo "AZURE_RESOURCE_GROUP: ${{ vars.RESOURCEGROUP_PREFIX }}-${{ inputs.deployEnvironment }}"

          echo "CA_ENV_PREFIX: ${{ vars.CA_ENV_PREFIX }}"
          echo "ACR_REPO_NAME: ${{ env.ACR_REPO_NAME }}"

          echo "CA_API_APP_PREFIX: ${{ vars.CA_API_APP_PREFIX }}"
          echo "API_APP_PATH: ${{ env.API_APP_PATH }}"
          echo "API_ACR_APP_NAME: ${{ env.API_ACR_APP_NAME }}"
          echo "API_PORT: ${{ env.API_PORT }}"

          echo "CA_BATCH_APP_PREFIX: ${{ vars.CA_BATCH_APP_PREFIX }}"
          echo "BATCH_APP_PATH: ${{ env.BATCH_APP_PATH }}"
          echo "BATCH_ACR_APP_NAME: ${{ env.BATCH_ACR_APP_NAME }}"
          echo "BATCH_PORT: ${{ env.BATCH_PORT }}"

  # ------------------------------------------------------------------------------------------------------------------------
  scan-code:
    name: Scan Code
    uses: ./.github/workflows/template-scan-code.yml
    if: inputs.runSecurityScan
    secrets: inherit
    permissions:
      actions: read
      contents: write
      checks: write

  # ------------------------------------------------------------------------------------------------------------------------
  build-api:
    name: Build Api
    uses: ./.github/workflows/template-aca-build.yml
    if: inputs.deployApp == 'api'
    needs:
      - template-env
    secrets: inherit
    with:
      APP_PATH: ${{ needs.template-env.outputs.API_APP_PATH }}
      ACR_APP_NAME: ${{ needs.template-env.outputs.API_ACR_APP_NAME }}
      ACR_NAME: ${{ needs.template-env.outputs.ACR_NAME }}
      ACR_REPO_NAME: ${{ needs.template-env.outputs.ACR_REPO_NAME }}
      RESOURCE_GROUP: ${{ needs.template-env.outputs.RESOURCE_GROUP_NAME }}

  # ------------------------------------------------------------------------------------------------------------------------
  deploy-api:
    name: Deploy API ${{ inputs.deployEnvironment }} ${{ inputs.deployType }}
    uses: ./.github/workflows/template-aca-deploy.yml
    if: inputs.deployApp == 'api'
    needs:
      - build-api
      - template-env
    secrets: inherit
    with:
      ENV_CODE: ${{ inputs.deployEnvironment }}
      RESOURCE_GROUP: ${{ needs.template-env.outputs.RESOURCE_GROUP_NAME }}
      CONTAINER_APP_ENV_NAME: ${{ needs.build-api.outputs.APP_PATH }}
      CONTAINER_NAME: ${{ needs.template-env.outputs.API_CONTAINER_APP_NAME }}
      ACR_NAME: ${{ needs.template-env.outputs.ACR_NAME }}
      IMAGE_NAME: ${{ needs.build-api.outputs.IMAGE_NAME }}
      PORT: ${{ needs.template-env.outputs.UI_PORT }}

  # ------------------------------------------------------------------------------------------------------------------------
  build-batch:
    name: Build Batch
    uses: ./.github/workflows/template-aca-build.yml
    if: inputs.deployApp == 'batch'
    needs:
      - template-env
    secrets: inherit
    with:
      APP_PATH: ${{ needs.template-env.outputs.BATCH_APP_PATH }}
      ACR_APP_NAME: ${{ needs.template-env.outputs.BATCH_ACR_APP_NAME }}
      ACR_NAME: ${{ needs.template-env.outputs.ACR_NAME }}
      ACR_REPO_NAME: ${{ needs.template-env.outputs.ACR_REPO_NAME }}
      RESOURCE_GROUP: ${{ needs.template-env.outputs.RESOURCE_GROUP_NAME }}

  # ------------------------------------------------------------------------------------------------------------------------
  deploy-batch:
    name: Deploy Batch ${{ inputs.deployEnvironment }} ${{ inputs.deployType }}
    uses: ./.github/workflows/template-aca-deploy.yml
    if: inputs.deployApp == 'batch'
    needs:
      - build-batch
      - template-env
    secrets: inherit
    with:
      ENV_CODE: ${{ inputs.deployEnvironment }}
      RESOURCE_GROUP: ${{ needs.template-env.outputs.RESOURCE_GROUP_NAME }}
      CONTAINER_APP_ENV_NAME: ${{ needs.build-batch.outputs.APP_PATH }}
      CONTAINER_NAME: ${{ needs.template-env.outputs.BATCH_CONTAINER_APP_NAME }}
      ACR_NAME: ${{ needs.template-env.outputs.ACR_NAME }}
      IMAGE_NAME: ${{ needs.build-batch.outputs.IMAGE_NAME }}
      PORT: ${{ needs.template-env.outputs.BATCH_PORT }}

  # # ------------------------------------------------------------------------------------------------------------------------
  # smoke-test:
  #   name: Smoke Test
  #   uses: ./.github/workflows/template-smoke-test.yml
  #   if: inputs.runSmokeTest
  #   needs: deploy-ui
  #   secrets: inherit
  #   permissions:
  #     contents: write
  #     issues: read
  #     checks: write
  #     pull-requests: read
  #   with:
  #     envCode: ${{ inputs.deployEnvironment }}
  #     testPath: 'playwright/ui-tests'
  #     testType: 'ui'
