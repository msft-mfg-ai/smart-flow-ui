# ------------------------------------------------------------------------------------------------------------------------
# Action: Create a package for reuse by others
# ------------------------------------------------------------------------------------------------------------------------
# Before allowing public to pull the image, you need to make sure your GitHub Package is set to public.
# Change the visibility by opening the package settings and setting the package visibility to public.
# Note: in order to do this the org settings for packages must be set to allow them to be made public.
# ------------------------------------------------------------------------------------------------------------------------
# This action relies on a Token which must be setup and given 'write:packages' permissions.
# Set secrets.PUBLISH_PACKAGE_TOKEN to the token value and secrets.PUBLISH_PACKAGE_USER to the owner of the token
# ------------------------------------------------------------------------------------------------------------------------

name: 5 - Create Repo Package UI Docker Image
run-name: 5 - Create Repo Package UI Docker Image by @${{ github.actor }}

on: 
  workflow_dispatch:

  release:
    types: 
      - published

permissions:
  packages: write

# ------------------------------------------------------------------------------------------------------------------------
env:
  ACR_NAME: 'ghcr.io'
  APP_PATH: 'app/SmartFlowUI'
  ACR_APP_NAME: 'smartflowui'

# ------------------------------------------------------------------------------------------------------------------------
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.APP_PATH }}
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Get the current date and repo name
        id: set-date
        run: echo "TAG=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Get repo name
        id: set-repo
        run: echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_OUTPUT

      # Uses the `docker/login-action` action to log in to the Container registry using the account and password that 
      # will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@327cd5a69de6c009b9ce71bce8395f28e651bf99
        with:
          registry: ${{ env.ACR_NAME }}
          username: ${{ secrets.PUBLISH_PACKAGE_USER }}
          password: ${{ secrets.PUBLISH_PACKAGE_TOKEN }}

      - name: Set image name
        id: image-name
        run: |
          echo "IMAGE_VERSION=${{ steps.set-date.outputs.TAG}}" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=${{ github.repository_owner }}/${{ steps.set-repo.outputs.REPO_NAME }}/${{ env.ACR_APP_NAME }}:${{ steps.set-date.outputs.TAG }}" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME_NO_TAG=${{ github.repository_owner }}/${{ steps.set-repo.outputs.REPO_NAME }}/${{ env.ACR_APP_NAME }}" >> $GITHUB_OUTPUT

      - name: Display Variables and Files
        run: |-
          echo "inputs.ACR_NAME=${{ env.ACR_NAME }}"
          echo "inputs.ACR_APP_NAME=${{ env.ACR_APP_NAME }}"
          echo "inputs.APP_PATH=${{ env.APP_PATH }}"

          echo "outputs.REPO_NAME=${{ steps.set-repo.outputs.REPO_NAME }}"
          echo "outputs.TAG=${{ steps.set-date.outputs.TAG }}"

          echo "outputs.IMAGE_VERSION=${{ steps.image-name.outputs.IMAGE_VERSION }}"
          echo "outputs.IMAGE_NAME=${{ steps.image-name.outputs.IMAGE_NAME }}"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.ACR_NAME }}/${{ steps.image-name.outputs.IMAGE_NAME_NO_TAG }}
          labels: |
            org.opencontainers.image.title=SmartFlowUI
            org.opencontainers.image.description=UI for the SmartFlow API
            org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/${{ steps.set-repo.outputs.REPO_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,enable=true,priority=200,prefix=,suffix=,value=${{ steps.set-date.outputs.TAG }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build Docker image
        run: docker build -t ${{ env.ACR_APP_NAME }} .

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: './${{ env.APP_PATH }}'
          push: true
          labels: ${{ steps.meta.outputs.labels }}            
          tags: ${{ steps.meta.outputs.tags }}
