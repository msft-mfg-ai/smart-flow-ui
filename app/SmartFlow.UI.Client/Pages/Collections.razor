@page "/collections"

<PageTitle>Collections</PageTitle>

<MudGrid>
    <MudItem xs="12">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Manage Collections</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    @if (!_showCreateCollectionForm)
                    {
                        <MudButton StartIcon="@Icons.Material.Filled.Add" 
                                   Color="Color.Primary" 
                                   Variant="Variant.Filled"
                                   OnClick="ShowCreateCollectionForm">
                            Create Collection
                        </MudButton>
                    }
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                @if (_showCreateCollectionForm)
                {
                    <!-- Create Collection Form -->
                    <MudPaper Elevation="2" Class="pa-4 mb-4">
                        <MudText Typo="Typo.h6" Class="mb-3">
                            <MudIcon Icon="@Icons.Material.Filled.CreateNewFolder" Class="mr-2" />
                            Create New Collection
                        </MudText>
                        <MudForm @ref="_createCollectionForm" @bind-IsValid="_createCollectionFormValid">
                            <MudTextField @bind-Value="_newCollectionName" 
                                          Label="Collection Name" 
                                          Variant="Variant.Outlined"
                                          Required="true"
                                          RequiredError="Collection name is required"
                                          Validation="@(new Func<string, string>(ValidateCollectionName))"
                                          Immediate="true"
                                          HelperText="Enter a unique name for the collection. Use lowercase letters, numbers, and hyphens only."
                                          Class="mb-3" />
                        </MudForm>
                        <MudStack Row="true" Spacing="2" Class="mt-4">
                            <MudButton OnClick="CancelCreateCollection" 
                                       Variant="Variant.Text"
                                       StartIcon="@Icons.Material.Filled.Cancel">
                                Cancel
                            </MudButton>
                            <MudButton Color="Color.Primary" 
                                       Variant="Variant.Filled" 
                                       OnClick="CreateCollectionAsync"
                                       StartIcon="@Icons.Material.Filled.Check"
                                       Disabled="@(!_createCollectionFormValid || string.IsNullOrWhiteSpace(_newCollectionName))">
                                Create Collection
                            </MudButton>
                        </MudStack>
                    </MudPaper>
                }

                @if (_isLoadingCollections)
                {
                    <MudProgressCircular Indeterminate="true" />
                    <MudText Class="ml-2">Loading collections...</MudText>
                }
                else if (_collections.Any())
                {
                    <MudMenu Label="@(_selectedCollection ?? "Select Collection")" Color="Color.Primary" FullWidth="true">
                        <ActivatorContent>
                            <MudButton Color="Color.Primary" 
                                       Variant="Variant.Outlined" 
                                       StartIcon="@Icons.Material.Filled.Folder" 
                                       EndIcon="@Icons.Material.Filled.KeyboardArrowDown"
                                       FullWidth="true">
                                @(_selectedCollection ?? "Select Collection")
                            </MudButton>
                        </ActivatorContent>
                        <ChildContent>
                            @foreach (var collection in _collections)
                            {
                                <MudMenuItem OnClick="@(async () => await SelectCollectionAsync(collection))">
                                    @collection
                                </MudMenuItem>
                            }
                        </ChildContent>
                    </MudMenu>
                }
                else if (!_showCreateCollectionForm)
                {
                    <MudAlert Severity="Severity.Info">No collections found. Create your first collection to get started.</MudAlert>
                }
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

@if (!string.IsNullOrEmpty(_selectedCollection))
{
    <br />

    <MudGrid>
        <!-- Upload Section - Only visible when _showUploadSection is true -->
        @if (_showUploadSection)
        {
            <MudItem xs="12">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudStack Row="true" AlignItems="AlignItems.Center">
                                <MudIcon Icon="@Icons.Material.Filled.CloudUpload" />
                                <MudText Typo="Typo.h6">Upload Documents to @_selectedCollection</MudText>
                            </MudStack>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Close" 
                                           OnClick="@(() => _showUploadSection = false)"
                                           Title="Close upload section" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    
                    <MudCardContent>
                        <MudFileUpload T="IReadOnlyList<IBrowserFile>" 
                                       Accept=".pdf,.png,.jpg,.jpeg" 
                                       MaximumFileCount="10" 
                                       FilesChanged="UploadFiles" 
                                       Required="true" 
                                       RequiredError="You must select at least one file to upload.">
                            <ActivatorContent>
                                <MudButton HtmlTag="label"
                                           Variant="Variant.Filled"
                                           Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.FileOpen"
                                           Size="Size.Large">
                                    Select Files
                                </MudButton>
                            </ActivatorContent>
                        </MudFileUpload>

                        @if (_fileUploads.Any())
                        {
                            <MudPaper Elevation="0" Class="mt-4 pa-3" Style="border: 1px dashed var(--mud-palette-primary);">
                                <MudStack Spacing="2">
                                    <MudText Typo="Typo.subtitle2">
                                        <MudIcon Icon="@Icons.Material.Filled.Info" Size="Size.Small" Class="mr-2" />
                                        @(_fileUploads.Count) file(s) selected - @(_fileUploads.Sum(f => f.Size).ToHumanReadableSize())
                                    </MudText>
                                    @foreach (var file in _fileUploads)
                                    {
                                        <MudChip T="string"
                                                 Icon="@Icons.Material.Filled.InsertDriveFile" 
                                                 OnClose="@(() => RemoveFile(file))"
                                                 Text="@($"{file.Name} ({file.Size.ToHumanReadableSize()})")" />
                                    }
                                </MudStack>
                            </MudPaper>
                        }

                        <MudText Typo="Typo.body2" Class="mt-3" Color="Color.Default">
                            Maximum file size: @(MaxIndividualFileSize.ToHumanReadableSize()) | Accepted formats: PDF, PNG, JPG, JPEG
                        </MudText>
                    </MudCardContent>
                    
                    <MudCardActions>
                        @if (_isUploadingDocuments)
                        {
                            <MudStack Row="true" AlignItems="AlignItems.Center" Class="ml-2">
                                <MudProgressCircular Indeterminate="true" Size="Size.Small" />
                                <MudText>Uploading documents...</MudText>
                            </MudStack>
                        }
                        else
                        {
                            <MudButton StartIcon="@Icons.Material.Filled.Clear"
                                       Variant="Variant.Text"
                                       Color="Color.Default"
                                       Disabled="@(!_fileUploads.Any())"
                                       Class="ml-2"
                                       OnClick="@(() => _fileUploads.Clear())">
                                Clear All
                            </MudButton>
                            <MudButton StartIcon="@Icons.Material.Filled.Upload"
                                       Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       Disabled="@(!_fileUploads.Any())"
                                       Class="ml-auto mr-2"
                                       OnClick="@(async _ => await SubmitFilesForUploadAsync())">
                                Upload @(_fileUploads.Count) File@(_fileUploads.Count != 1 ? "s" : "")
                            </MudButton>
                        }
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }

        <!-- Collection Files Table -->
        <MudItem xs="12">
            <MudTable Items="@_collectionFiles" 
                      Dense="true" 
                      Hover="true" 
                      Bordered="true" 
                      FixedHeader="true" 
                      Filter="OnFileFilter" 
                      Elevation="4">
                <ToolBarContent>
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                        <MudIcon Icon="@Icons.Material.Filled.Folder" />
                        @if (_isLoadingDocuments)
                        {
                            <MudText Typo="Typo.h6">Loading Files</MudText>
                            <MudProgressCircular Indeterminate="true" Size="Size.Small" />
                        }
                        else
                        {
                            <MudText Typo="Typo.h6">@_selectedCollection</MudText>
                            <MudChip T="string" Size="Size.Small" Color="Color.Primary">@_collectionFiles.Count file@(_collectionFiles.Count != 1 ? "s" : "")</MudChip>
                            <MudIconButton Icon="@Icons.Material.Filled.Refresh" 
                                          OnClick="RefreshAsync" 
                                          Size="Size.Small"
                                          Title="Refresh file list" />
                        }
                    </MudStack>
                    <MudSpacer />
                    <MudButton StartIcon="@Icons.Material.Filled.Upload"
                               Color="Color.Primary"
                               Variant="Variant.Filled"
                               OnClick="@(() => _showUploadSection = true)"
                               Class="mr-2">
                        Upload Document
                    </MudButton>
                    <MudTextField @bind-Value="@_filter" 
                                  Placeholder="Search files" 
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Search" 
                                  IconSize="Size.Medium"
                                  Margin="Margin.Dense"
                                  DebounceInterval="300">
                    </MudTextField>
                </ToolBarContent>
                <HeaderContent>
                    <MudTh>File Name</MudTh>
                    <MudTh Style="width: 200px;">Processing Files</MudTh>
                    <MudTh Style="text-align: center; width: 200px;">Actions</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Name">
                        <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                            @if (CanViewFile(context.FileName))
                            {
                                <MudTooltip Text="View file">
                                    <MudIconButton Icon="@Icons.Material.Filled.Visibility"
                                                   Color="Color.Info"
                                                   Size="Size.Small"
                                                   OnClick="@(async () => await ViewFileAsync(context.FileName, false))" />
                                </MudTooltip>
                            }
                            <MudIcon Icon="@Icons.Material.Filled.InsertDriveFile" Size="Size.Small" />
                            <MudText>@context.FileName</MudText>
                        </MudStack>
                    </MudTd>
                    <MudTd DataLabel="Processing Files">
                        @if (context.ProcessingFiles.Any())
                        {
                            <MudStack Spacing="1">
                                @foreach (var processingFile in context.ProcessingFiles)
                                {
                                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
                                        <MudChip T="string" Size="Size.Small" Icon="@Icons.Material.Filled.Description">
                                            @Path.GetFileName(processingFile)
                                        </MudChip>
                                        @if (CanViewFile(processingFile))
                                        {
                                            <MudTooltip Text="View file">
                                                <MudIconButton Icon="@Icons.Material.Filled.Visibility"
                                                               Color="Color.Info"
                                                               Size="Size.Small"
                                                               OnClick="@(async () => await ViewFileAsync(processingFile, true))" />
                                            </MudTooltip>
                                        }
                                    </MudStack>
                                }
                            </MudStack>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Default">
                                <em>None</em>
                            </MudText>
                        }
                    </MudTd>
                    <MudTd DataLabel="Actions" Style="text-align: center;">
                        <MudStack Row="true" Justify="Justify.Center" Spacing="1">
                            @if (_processingFiles.Contains(context.FileName))
                            {
                                <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                            }
                            else
                            {
                                <MudTooltip Text="Process document layout">
                                    <MudIconButton Icon="@Icons.Material.Filled.AutoFixHigh"
                                                   Color="Color.Primary"
                                                   Size="Size.Small"
                                                   OnClick="@(async () => await ProcessDocumentLayoutAsync(context.FileName))"
                                                   Title="Process Layout" />
                                </MudTooltip>
                            }
                        </MudStack>
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100 }" />
                </PagerContent>
            </MudTable>
        </MudItem>
    </MudGrid>
}
else if (_collections.Any())
{
    <br />
    <MudGrid>
        <MudItem xs="12">
            <MudAlert Severity="Severity.Info">
                <MudText Typo="Typo.h6">Select a collection to continue</MudText>
                <MudText>Choose a collection from the dropdown above to upload documents and view files.</MudText>
            </MudAlert>
        </MudItem>
    </MudGrid>
}
