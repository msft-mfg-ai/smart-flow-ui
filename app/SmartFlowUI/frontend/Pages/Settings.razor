@page "/settings"

<PageTitle>Settings</PageTitle>

<MudText Typo="Typo.h2" Style="margin-bottom: 30px;">Settings</MudText>

<MudGrid Justify="Justify.Center">
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" Style="width: 97%;">

        <MudTabPanel Text="Endpoints" Icon="@Icons.Material.Filled.Api" BadgeData="@_profileInfo.Profiles.Count" BadgeColor="Color.Success">
            <MudItem id="profiles" xs="12" Class="overflow-x-auto">
                <MudCard Class="ma-1">
                    <MudText Typo="Typo.h4">@_profileInfo.Keys.Count Endpoints Are Defined</MudText>
                    <MudList T="string">
                        @foreach (var key in _profileInfo.Keys)
                        {
                            if (key.APIEndpointSettingIsValid && key.APIEndpointKeySettingIsValid)
                            {
                                <MudListItem>
                                    <AvatarContent>
                                        <MudIcon Icon="@Icons.Material.Filled.Key" Title="Key Found!" Style="color: forestgreen;" />
                                    </AvatarContent>
                                    <ChildContent>
                                        <b>@key.ProfileName</b><br />
                                        @key.APIEndpointSettingValue
                                    </ChildContent>
                                </MudListItem>
                            }
                            else
                            {
                                if (key.APIEndpointSettingIsValid && !key.APIEndpointKeySettingIsValid)
                                {
                                    <MudListItem>
                                        <AvatarContent>
                                            <MudIcon Icon="@Icons.Material.Filled.HeartBroken" Title="Key is invalid!" Style="color: red;" />
                                        </AvatarContent>
                                        <ChildContent>
                                            <b>@key.ProfileName</b><br />
                                            @key.APIEndpointSettingValue<br />
                                            <i>Invalid Key is named <b>@key.APIEndpointKeySettingName</b></i>
                                        </ChildContent>
                                    </MudListItem>
                                }
                                else
                                {
                                    <MudListItem>
                                        <AvatarContent>
                                            <MudIcon Icon="@Icons.Material.Filled.CallMissed" Title="No URL defined" Style="color: blueviolet;" />
                                        </AvatarContent>
                                        <ChildContent>
                                            <b>@key.ProfileName</b><br />
                                            No URL defined for this endpoint
                                        </ChildContent>
                                    </MudListItem>
                                }
                            }
                        }
                    </MudList>
                    <MudText Typo="Typo.body2" Style="margin-left: 50px; color: gray">
                        Legend:<br />
                        <MudIcon Icon="@Icons.Material.Filled.CallMissed" Title="Key" Style="font-size: .8em; color: blueviolet;" /> No Endpoint URL defined<br />
                        <MudIcon Icon="@Icons.Material.Filled.Key" Title="Key" Style="font-size: .8em; color: forestgreen;" /> Endpoint found with a key specified<br />
                        <MudIcon Icon="@Icons.Material.Filled.HeartBroken" Style="font-size: .8em; color: red; " Title="HeartBroken" /> Endpoint found with but no key value found<br />
                    </MudText>
                </MudCard>
            </MudItem>
        </MudTabPanel>

        <MudTabPanel Text="Profile Config" Icon="@Icons.Material.Filled.DataObject">
            <MudForm @ref="@_form">
                <MudText Typo="Typo.h4">Profile Data</MudText>
                <MudText>@_profileInfo?.ProfileLoadingMessage</MudText>
                <MudButton StartIcon="@Icons.Material.Filled.ReplayCircleFilled" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium"
                           Style="width: 300px; margin-bottom: 15px;"
                           Disabled=@(!_profileInfo.Profiles.Any())
                           OnClick="@(async _ => await ReloadProfileInfoAsync())">
                    Reload Profile Data
                </MudButton>
                <MudTextField @bind-Value="_profileRawData" T="string" FullWidth AutoGrow Variant="Variant.Outlined" Style="font-family: Consolas;"
                              Label="Raw Profile Data"></MudTextField>
            </MudForm>
        </MudTabPanel>

        <MudTabPanel Text="Converter" Icon="@Icons.Material.Filled.EnhancedEncryption">
            <MudCard Class="ma-1">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">Base 64 Conversion Utility</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Style="margin-bottom: 20px;">This page provides a handy utility to encode or decode Base64 encoded strings, which are sometimes used in the profile configurations.</MudText>
                    <MudForm @ref="@_encodeForm">
                        <MudTextField @bind-Value="_b64DecodedText" T="string" FullWidth AutoGrow Variant="Variant.Outlined" Style="font-family: Consolas;" Label="Decoded Text"></MudTextField>
                        <MudButton StartIcon="@Icons.Material.Filled.EnhancedEncryption" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium"
                                   Style="width: 300px; margin-bottom: 30px;"
                                   OnClick="@(_ => Base64EncodeText())">
                            Encode this Text
                        </MudButton>

                        <MudTextField @bind-Value="_b64EncodedText" T="string" FullWidth AutoGrow Variant="Variant.Filled" Style="font-family: Consolas;" Label="Encoded Text"></MudTextField>
                        <MudButton StartIcon="@Icons.Material.Filled.NoEncryption" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium"
                                   Style="width: 300px; margin-bottom: 30px;"
                                   OnClick="@(_ => Base64DecodeText())">
                            Decode this Text
                        </MudButton>

                    </MudForm>
                </MudCardContent>
            </MudCard>
        </MudTabPanel>

        <MudTabPanel Text="Help" Icon="@Icons.Material.Filled.HelpOutline">
            <MudCard Class="ma-1">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">Profile Configuration Help</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    The prompts that are defined in the SmartFlow API should be represented in the UI as profiles.<br />
                    <br />
                    Profiles are originally defined in the Services/Profile/profiles.json file, which is embedded in the application.
                    Once the UI is deployed, you can change the profiles defined by specifying one of two alternate locations for the profile data.
                    In that way, you can update the profiles supplied without having to redeploy the application each time.
                    <br /><br />
                    The profiles are loaded in priority order, starting with the Storage Account, then looking for a ProfileConfiguration environment key, then defaulting finally to the <i>profiles.json</i> file if the two alternates are not defined.
                    <br /><br />
                    <b>1. Storage Account Profile</b>
                    <br /><br />
                    If you create an environment key named <b><i>ProfileConfigurationBlobStorageContainer</i></b>, the application will look in that container name for a file named <i>profiles.json</i>.  This file will be used to override the profiles defined in the <i>profiles.json</i> file in the application.
                    Upload your <i>profiles.json</i> into that container and then use the <b><i>Profile Config tab</i></b> on this page to reload the profile data and see the changes reflected in this app.
                    <br /><br />
                    <b>2. Environment Key Profile</b>
                    <br /><br />
                    If you create an environment key named <b><i>ProfileConfiguration</i></b> in your Azure app deployment, the application will use that data to override the profiles defined in the <i>profiles.json</i> file in the application.
                    It is expected that the key value would contain a JSON string that contains exactly what would be in the <i>profiles.json</i> file.
                    However, the application expects that this data will be Base64 encoded as it will be decoded when it is read so you must encode that data.
                    <ul>
                        <li>Create a <i>profiles.json</i> file in an editor, then use the <b><i>Converter tab</i></b> on this page to encode that data into a Base64 encoded string.</li>
                        <li>Create an environment key named <b><i>ProfileConfiguration</i></b> in your Azure app deployment and paste the Base64 encoded string into the value of that key.</li>
                        <li>Use the <b><i>Profile Config tab</i></b> on this page to reload the profile data and see the changes reflected in this app.</li>
                    </ul>
                </MudCardContent>
            </MudCard>
        </MudTabPanel>

        <MudTabPanel Text="Info" Icon="@Icons.Material.Filled.Build">
            <MudCard Class="ma-1">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">System Info</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <ul>
                        <li>Build Id: @_buildInfo.BuildId</li>
                        <li>Build Number: @_buildInfo.BuildNumber</li>
                        <li>Build Date: @_buildInfo.BuildDate</li>
                        <li>Image Tag: @_buildInfo.ImageTag</li>
                        <li>Branch: @_buildInfo.BranchName</li>
                        <li>Commit: @_buildInfo.CommitHash</li>
                    </ul>
                </MudCardContent>
            </MudCard>
        </MudTabPanel>

    </MudTabs>

    <MudScrollToTop Selector="#profiles" VisibleCssClass="visible absolute" HiddenCssClass="invisible">
        <MudFab Color="Color.Primary" IconSize="Size.Large" StartIcon="@Icons.Material.Filled.ArrowUpward" />
    </MudScrollToTop>
</MudGrid>
