# ----------------------------------------------------------------------------------------------------
# Pipeline for AZD process
# ----------------------------------------------------------------------------------------------------
name: AI-Document-Review-UI

metadata:
  template: azd-init@1.11.0

infra:
  provider: bicep
  path: infra/bicep
  module: main

services:
  ui:
    project: ./app/SmartFlowUI/backend
    host: containerapp
    language: dotnet
    docker:
      path: ../Dockerfile
      context: ../

hooks:
  # This script gets my IP address
  preprovision:
    shell: pwsh
    run: |
      $myIP = $(Invoke-WebRequest -Uri "https://api.ipify.org").Content
      azd env set MY_IP $myIP
    continueOnError: false
    interactive: false
  postprovision:
    shell: pwsh
    run: |
      Write-Host "Loading azd .env file from current environment"

      # Use the `get-values` azd command to retrieve environment variables from the `.env` file
      $envValues = azd env get-values

      $envDict = @{}

      foreach ($line in $envValues -split "`n") {
          if ($line -match '^(.*?)=(.*)$') {
              $key = $Matches[1]
              $value = $Matches[2].Trim('"') # Remove surrounding quotes
              $envDict[$key] = $value
          }
      }

      $json_content = @{
        AOAIStandardServiceEndpoint = $envDict['AI_ENDPOINT']
        AOAIPremiumServiceEndpoint = $envDict['AI_ENDPOINT']
        AOAIPremiumChatGptDeployment = "gpt-4o"
        AOAIStandardChatGptDeployment = "gpt-4o"
        AOAIEmbeddingsDeployment = "text-embedding"

        AzureSearchServiceEndpoint = $envDict['AI_SEARCH_ENDPOINT']

        CosmosDbEndpoint =  $envDict['COSMOS_ENDPOINT']
        CosmosDbDatabaseName = "ChatHistory"
        CosmosDbCollectionName = "ChatTurn"

        DocumentUploadStrategy = "AzureNative"
        EnableDataProtectionBlobKeyStorage = "false"
        StorageAccountName = $envDict['STORAGE_ACCOUNT_NAME']
        AzureStorageAccountEndPoint = 'https://$($envDict["STORAGE_ACCOUNT_NAME"]).blob.core.windows.net'
        ContentStorageContainer = $envDict['STORAGE_ACCOUNT_CONTAINER']
        AzureStorageUserUploadContainer = "content"

        UserAssignedManagedIdentityClientId = $envDict['ADMIN_CLIENT_ID']
        UseManagedIdentityResourceAccess = "true"
        ProfileFileName = "profiles"

        ShowCollectionsSelection = "true"
        ShowFileUploadSelection = "true"

        AnalysisApiEndpoint = "https://$($envDict['API_CONTAINER_APP_FQDN'])"
        AnalysisApiKeysecretRef = $envDict['API_KEY']
        AzureDocumentIntelligenceEndpoint =$envDict['DOCUMENT_INTELLIGENCE_ENDPOINT']
        ApiKey = $envDict['API_KEY']
        APPLICATIONINSIGHTS_CONNECTION_STRING = ""
        AZURE_CLIENT_ID = $envDict['ADMIN_CLIENT_ID']
        existing_Identity_Name = $envDict['MANAGED_IDENTITY_NAME']
        IsEncrypted = $false
      } | ConvertTo-Json -Depth 5

      $json_content | Set-Content ./app/SmartFlowUI/appsettings.Development.json
    continueOnError: false
    interactive: false